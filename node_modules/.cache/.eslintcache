[{"/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/index.js":"1","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/reportWebVitals.js":"2","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/App.js":"3","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/SignUpForm.js":"4","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/LogInForm.js":"5","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/NavBar.js":"6","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/Home.js":"7","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/DashBoard.js":"8","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/NewCategoryForm.js":"9","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/NewGoalForm.js":"10","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/CategoryContainer.js":"11","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/Categories.js":"12","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/GoalsContainer.js":"13","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/NewTaskForm.js":"14","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/Preferences.js":"15","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/Goals.js":"16","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/EditCategoryForm.js":"17","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/TaskContainer.js":"18","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/Tasks.js":"19","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/TaskRows.js":"20"},{"size":544,"mtime":1627087743216,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1626891913429,"results":"23","hashOfConfig":"22"},{"size":6272,"mtime":1628187706038,"results":"24","hashOfConfig":"22"},{"size":2693,"mtime":1627498156067,"results":"25","hashOfConfig":"22"},{"size":3153,"mtime":1628049630137,"results":"26","hashOfConfig":"22"},{"size":666,"mtime":1627258169295,"results":"27","hashOfConfig":"22"},{"size":268,"mtime":1627325955278,"results":"28","hashOfConfig":"22"},{"size":9663,"mtime":1628185613842,"results":"29","hashOfConfig":"22"},{"size":1862,"mtime":1628131796873,"results":"30","hashOfConfig":"22"},{"size":2691,"mtime":1628135509364,"results":"31","hashOfConfig":"22"},{"size":676,"mtime":1628128812372,"results":"32","hashOfConfig":"22"},{"size":1257,"mtime":1628178486358,"results":"33","hashOfConfig":"22"},{"size":1041,"mtime":1628170991539,"results":"34","hashOfConfig":"22"},{"size":7094,"mtime":1628135610279,"results":"35","hashOfConfig":"22"},{"size":2632,"mtime":1628034873649,"results":"36","hashOfConfig":"22"},{"size":957,"mtime":1628181720472,"results":"37","hashOfConfig":"22"},{"size":144,"mtime":1628081013188,"results":"38","hashOfConfig":"22"},{"size":936,"mtime":1628177713602,"results":"39","hashOfConfig":"22"},{"size":1152,"mtime":1628177715601,"results":"40","hashOfConfig":"22"},{"size":959,"mtime":1628183580136,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"13ipukz",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"44"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/index.js",[],["95","96"],"/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/reportWebVitals.js",[],"/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/App.js",["97","98"],"// import logo from './logo.svg';\n// import React, { Component } from 'react';\nimport 'bulma/css/bulma.min.css';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport LogInForm from './components/LogInForm'\nimport SignUpForm from './components/SignUpForm';\nimport DashBoard from './components/DashBoard'; \nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\nimport Preferences from './components/Preferences';\nimport EditCategoryForm from \"./components/EditCategoryForm\"\n// import { responsiveFontSizes } from '@material-ui/core';\n\nlibrary.add(fas)\n\nfunction App(props) {\n\n  const [userInfo, setUserInfo] = useState({\n    id: 0, \n    name: '',\n    username: '',\n    quote:'',\n    token: \"\", \n    categories: [],\n    tasks: [], \n  })\n\n  const [date, setDate] = useState({\n    currentDate: new Date().toLocaleDateString(),\n  })\n\n  useEffect(() => {\n    if(localStorage.token)\n      fetch(\"http://localhost:3000/me\", {\n        headers: {\n          \"authorization\" : localStorage.token\n        }\n      })\n      .then(res => res.json())\n      .then(handleResponse)\n  },[]);\n\n  // const [categories, setCategories] = useState([]\n  // )\n\n  console.log(userInfo.tasks)\n\n  const handleSignUp = (userInfo) => {\n    console.log(\"Create account form has been submitted\")\n\n    fetch(\"http://localhost:3000/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: userInfo.name,\n        username: userInfo.username,\n        password: userInfo.password, \n        quote: userInfo.quote\n      })\n    })\n      .then(res => res.json())\n      .then(handleResponse)\n  }\n\n  const handleResponse = (resp) => {\n    if(resp.token){\n      setUserInfo({\n        ...userInfo,\n        username: resp.user.username,\n        name: resp.user.name,\n        quote: resp.user.quote,\n        token: resp.token,\n        categories: resp.user.categories,\n        tasks: resp.user.tasks\n      })\n      localStorage.token = resp.token\n      props.history.push(\"/dashboard\")\n    } else {\n      alert(\"Request error\")\n    }\n  }\n\n  const handleLogin = (userInfo) => {\n    console.log(\"Login form has been submitted\")\n\n    fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      headers :{\n        \"content-type\": \"application/json\"\n      }, \n      body: JSON.stringify({\n        username: userInfo.username,\n        password: userInfo.password\n      })\n    })\n      .then(res => res.json())\n      .then(handleResponse)\n  }\n\n  const addCategory = (category) => {\n    setUserInfo({\n      ...userInfo,\n      categories: [...userInfo.categories, category]\n    })\n  }\n\n  const addGoal = (goal) => {\n    let findCategoryForGoal = userInfo.categories.find(category => {\n      return category.id === goal.category_id\n    })\n\n    let newArrOfGoals = [...findCategoryForGoal.goals, goal]\n\n    let copyOfCategory = {\n      ...findCategoryForGoal, \n      goals: newArrOfGoals\n    }\n\n    replaceCategoryInState(copyOfCategory)\n  }\n\n  const addTask = (task) => {\n    console.log(task)\n    setUserInfo({\n      ...userInfo, \n      tasks: [...userInfo.tasks, task]\n    })\n  }\n\n  const handleTaskComplete = (task) => {\n\n    console.log(task)\n  \n    setUserInfo({\n      ...userInfo,\n      tasks: [...userInfo.tasks, task]\n    })\n  }\n\n  const deleteGoal = (goal) => {\n    console.log(goal)\n    \n    let findCategoryForGoal = userInfo.categories.find(category => {\n      return category.id === goal.category_id\n    })\n    console.log(findCategoryForGoal)\n    \n    let newArrOfGoals = findCategoryForGoal.goals.filter(goalsObj => {\n      return goalsObj.id !== goal.id\n    })\n\n    console.log(newArrOfGoals)\n\n    let copyOfGoals = {\n      ...findCategoryForGoal, \n      goals: newArrOfGoals\n    }\n\n    console.log(copyOfGoals)\n\n    replaceCategoryInState(copyOfGoals)\n\n  }\n\n  const replaceCategoryInState = (copyOfCategory) => {\n    let copyOfAllCategories = userInfo.categories.map(category => {\n      if(category.id === copyOfCategory.id) {\n        return copyOfCategory\n      } else {\n        return category\n      }\n    })\n\n    setUserInfo({\n      ...userInfo,\n      categories: copyOfAllCategories\n    })\n  }\n\n  const handleLogout = () => {\n    console.log(\"logging out\")\n    setUserInfo({\n      id: 0, \n      name: '',\n      username: '',\n      quote:'',\n      token: \"\", \n      categories: [],\n    })\n    localStorage.clear()\n    props.history.push(\"/\")\n  }\n\n  const deleteCategory = (deletedCategory) => {\n    const newCategoryArr = userInfo.categories.filter(category => category.id !== deletedCategory.id)\n    setUserInfo({\n      ...userInfo, \n      categories: newCategoryArr\n    })\n  }\n\n  return (\n    <div className=\"container\">\n      {/* Navigation bar */}\n\n      <Switch>\n        <Route exact path=\"/\">\n          <section className=\"hero is-fullheight has-background-white\">\n            <div className=\"hero-body\">\n              <div className=\"container\">\n                <div className=\"level-item has-text-centered\">\n                <LogInForm login={handleLogin}/>\n                </div>\n              </div>\n            </div>\n          </section>\n        </Route>\n\n        <Route exact path=\"/signup\">\n        <section className=\"hero is-fullheight has-background-white\">\n            <div className=\"hero-body\">\n              <div className=\"container\">\n                <div className=\"level-item has-text-centered\">\n                  <SignUpForm signUp={handleSignUp}></SignUpForm>\n                </div>\n              </div>\n            </div>\n          </section>\n        </Route>\n\n        <Route exact path=\"/dashboard\">\n            <DashBoard userInfo={userInfo} addCategory={addCategory} addGoal={addGoal} addTask={addTask} logout={handleLogout} deleteCategory={deleteCategory} deleteGoal={deleteGoal} date={date} updateTask={handleTaskComplete}></DashBoard>\n        </Route>\n        <Route exact path=\"/preferences\">\n          <Preferences userInfo={userInfo} >\n          </Preferences>\n        </Route>\n        <Route exact path=\"/editcategory\">\n              <EditCategoryForm userInfo={userInfo}/>\n        </Route>\n      </Switch>\n      </div>\n  );\n}\n\nexport default withRouter(App)\n","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/SignUpForm.js",[],"/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/LogInForm.js",["99"],"// import React, { Component } from 'react';\nimport 'bulma/css/bulma.min.css';\nimport { useState } from 'react';\nimport { withRouter } from 'react-router';\nimport { Link} from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport { CardContent } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 500,\n    }\n})\n\nfunction LoginForm(props) {\n\n    const classes = useStyles();\n\n    const [loginInfo, setLoginInfo] = useState({\n        username:'',\n        password:''\n    })\n\n    const handleChange = (event) => {\n        setLoginInfo({\n            ...loginInfo,\n            [event.target.name]: event.target.value\n        })\n    } \n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        props.login(loginInfo)\n    }\n\n    return (\n\n        <section class=\"section\">\n\t\t\t<div class=\"container\">\n\t\t\t\t<div class=\"columns\">\n\t\t\t\t\t<div class=\"column\">\n                        <img src=\"./logo.gif\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"column\">\n                    <br></br>\n                    <br></br>\n                    <br></br>\n                    <br></br>\n                    <br></br>\n                    <br></br>\n                    \n                    <Card className={classes.root}> \n                        <CardContent>\n                        <br></br>\n                        <strong>\"Quack quack, let's be productive\"</strong>\n                        <br></br>\n                        <br></br> \n                        <form onSubmit={handleSubmit}>\n                            <p className=\"control has-icons-left has-icons-right\">\n                                <input className=\"input\" type=\"email\" placeholder=\"Email\" name='username' value={loginInfo.username} onChange={handleChange}/>\n                                <span className=\"icon is-small is-left\">\n                                    <i className=\"fas fa-envelope\"></i>\n                                </span>\n                                <span className=\"icon is-small is-right\">\n                                <i className=\"fas fa-check\"></i>\n                                </span>\n                                </p>\n                                <br></br>\n                            <p className=\"control has-icons-left\">\n                                <input className=\"input\" type=\"password\" placeholder=\"Password\" name='password' value={loginInfo.password}onChange={handleChange}/>\n                                <span className=\"icon is-small is-left\">\n                                    <i className=\"fas fa-lock\"></i>\n                                </span>\n                            </p>\n                            <br></br>\n                            <button className=\"button is-primary\"><strong>Log In</strong></button>\n                        </form>\n                        <br></br>\n                        <Link to='/signup'>Create an account</Link> \n                        </CardContent>\n                        </Card>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\n  \n    )\n}\n\nexport default withRouter(LoginForm)","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/NavBar.js",["100","101","102","103","104","105"],"import React from 'react';\nimport { NavLink, Route, Switch, withRouter } from 'react-router-dom';\nimport 'bulma/css/bulma.min.css';\n\nexport default function NavBar() {\n    return (\n        <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n            <NavBar>\n            <div className=\"navbar-brand\">\n                <a className=\"navbar-item\" href=\"\">\n                <img src=\"https://bulma.io/images/bulma-logo.png\" width=\"112\" height=\"28\"/>\n                </a>\n            </div>\n\n            <a className=\"navBar-item\">\n                <NavLink to=\"/login\">Log In</NavLink>\n            </a>\n            </NavBar>\n        </nav>\n    )\n}\n",["106","107"],"/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/Home.js",[],"/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/DashBoard.js",["108","109","110","111","112","113","114","115","116","117"],"import React from 'react'\nimport NewCategoryForm from './NewCategoryForm'\nimport NewGoalForm from './NewGoalForm'\n// import { useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport GoalContainer from './GoalsContainer';\nimport CategoryContainer from './CategoryContainer'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport NewTaskForm from './NewTaskForm';\nimport { Doughnut, Pie } from 'react-chartjs-2'\nimport { useState } from 'react';\nimport TaskContainer from './TaskContainer';\n\n\nexport default function DashBoard(props) {\n\n    console.log(props)\n\n    const renderCategoryDuration = props.userInfo.categories.map((category) => {\n        return category.duration})\n\n    const renderIncompletedTasks = props.userInfo.tasks.filter((task, index) => (\n        task.status_complete === false\n    ))\n\n    const renderCompletedTasks = props.userInfo.tasks.filter((task, index) => (\n        task.status_complete === true\n    ))\n\n    const renderGoalCategories = props.userInfo.categories.map((category) => {\n        return <GoalContainer deleteGoal={props.deleteGoal} key={category.id} id={category.id} categoryName={category.name} goalArr={category.goals} token={props.userInfo.token}/>\n    })\n\n    const renderGoalNames = props.userInfo.categories.map((category) => {\n        return category.name})\n    \n    const renderWorstTasks = props.userInfo.tasks.filter((task, index) => (\n        task.difficulty === \"Worst\"))\n\n    const renderNotBadTasks = props.userInfo.tasks.filter((task, index) => (\n        task.difficulty === \"Not Bad\"))\n\n    const renderEasyTasks = props.userInfo.tasks.filter((task, index) => (\n        task.difficulty === \"Easy\"))\n\n    const pieData = {\n        labels: renderGoalNames,\n        datasets: [{\n          label: 'Categories',\n          data: renderCategoryDuration,\n          backgroundColor: [\n            'rgb(2, 71, 181)',\n            'rgb(193, 253, 111)',\n            'rgb(172, 127, 203)',\n            'rgb(203, 53, 175)',\n            'rgb(226, 45, 44)',\n            'rgb(102, 181, 19)',\n            'rgb(92, 165, 221)',\n            'rgb(250, 40, 162)',\n            'rgb(250, 252, 120)',\n            'rgb(67, 59, 246)' \n          ],\n          hoverOffset: 4\n        }]\n      };\n\n    const doughnutData = {\n        labels: [\n            'Incomplete',\n            'Complete',\n          ],\n          datasets: [{\n            label: 'My First Dataset',\n            data: [renderIncompletedTasks.length, renderCompletedTasks.length],\n            backgroundColor: [\n            'rgb(226, 45, 44)',\n            'rgb(102, 181, 19)'\n            ],\n            hoverOffset: 4\n          }]\n    }\n\n    const difficultDoughnutData = {\n        labels: [\n            'Worst',\n            'Not Bad',\n            'Easy'\n          ],\n          datasets: [{\n            label: 'My First Dataset',\n            data: [renderWorstTasks.length, renderNotBadTasks.length, renderEasyTasks.length],\n            backgroundColor: [\n                'rgb(250, 40, 162)',\n                'rgb(250, 252, 120)',\n                'rgb(193, 253, 111)'\n            ],\n            hoverOffset: 4\n          }]\n\n    }\n\n   \n    return (\n\n        // </section>\n       <div className=\"container\">\n           <div className=\"hero is-fullheight has-background-white\">\n        <nav class=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        {/* <div class=\"navbar-brand\">\n            <a class=\"navbar-item\" href=\"https://bulma.io\">\n                <img src=\"https://bulma.io/images/bulma-logo.png\" width=\"112\" height=\"28\"/>\n            </a>\n\n            <a role=\"button\" class=\"navbar-burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            </a>\n        </div> */}\n\n        <div class=\"navbar-menu\">\n            <div class=\"navbar-start\">\n            <a class=\"navbar-item\">\n            <Link to='/dashboard'>Dashboard</Link>\n            </a>\n\n            <a class=\"navbar-item\">\n            <Link to='/preferences'>Preferences</Link>\n            </a>\n\n            <div class=\"navbar-item has-dropdown is-hoverable\">\n                <a class=\"navbar-link\">\n                More\n                </a>\n\n                <div class=\"navbar-dropdown\">\n                <a class=\"navbar-item\">\n                    About\n                </a>\n                <a class=\"navbar-item\">\n                    Take a Break\n                </a>\n                <a class=\"navbar-item\">\n                    Contact\n                </a>\n                <hr class=\"navbar-divider\"/>\n                <a class=\"navbar-item\">\n                    Report an issue\n                </a>\n                </div>\n            </div>\n            </div>\n\n            <div class=\"navbar-end\">\n            <div class=\"navbar-item\">\n                <div class=\"buttons\">\n                <a class=\"button\" onClick={props.logout}>\n                    Logout\n                </a>\n                </div>\n            </div>\n            </div>\n        </div>\n        </nav>\n        <br></br>\n\n        \n\n        \n           <div className=\"content\">\n               \n               <h1>Hello, {props.userInfo.name}</h1>\n               <div className=\"block\"><h4>\"{props.userInfo.quote}\"</h4></div>\n                    <section class=\"section\">\n                    <div class=\"container\">\n                        <div class=\"columns\">\n                            <div class=\"column\">\n                            <h3>How you spend your time daily </h3>\n                                <Pie data={pieData}/>\n                            </div>\n                            <div className=\"column\"> \n                            <CategoryContainer categories={props.userInfo.categories} userInfo={props.userInfo} deleteCategory={props.deleteCategory}/>\n                            <h3>Create a Category</h3>\n                            <NewCategoryForm userInfo={props.userInfo} addCategory={props.addCategory}/>\n                            </div>\n                        </div>\n                    </div>\n                    <br></br>\n                    <br></br>\n                    <hr style={{height: 5}}></hr>\n                    <br></br>\n                    <div className=\"container\">\n                        <div className=\"columns\">\n                            <div class=\"column\">\n                            <h3>Remaining Tasks for the day</h3>\n                            <Doughnut data={doughnutData}/>\n                            </div>\n                     \n                            <div className=\"column\">\n                            <h3>Task Overview</h3>\n                            <br></br>\n                            <TaskContainer tasks={props.userInfo.tasks} updateTask={props.updateTask} token={props.userInfo.token}/>\n                            </div>\n                        </div>\n                    </div>\n                    <br></br>\n                    <br></br>\n\n                    <hr style={{height: 5}}></hr>\n                    <br></br>\n                    <div className=\"container\">\n                        \n                        <div className=\"columns\">\n                            <div class=\"column\">\n                            <h3>Difficulty</h3>\n                            <Doughnut data={difficultDoughnutData}/>\n                            </div>\n\n                            <div className=\"column\">\n                            <h3>Create a Task</h3>\n                            <br></br>\n                                <NewTaskForm categories={props.userInfo.categories} addTask={props.addTask} userInfo={props.userInfo}/>\n\n                            </div>\n                           \n                        </div>\n                    </div>\n                    <br></br>\n                    <br></br>\n\n                    <hr style={{height: 5}}></hr>\n                    <br></br>\n\n                    <div className=\"container\">\n                        \n                        <div className=\"columns\">\n                            <div className=\"column\">\n                            <h3>Create a Goal</h3>\n                            <br></br>\n                            <NewGoalForm userInfo={props.userInfo} addGoal={props.addGoal}/>\n\n                            </div>\n                            <div className=\"column\">\n                            <h3>Goals Overview</h3>\n                            <br></br>\n               \n                            {renderGoalCategories}\n\n                            </div>\n                        </div>\n                    </div>\n                </section>\n               \n            \n                {/* {props.userInfo.categories.map((category, index) => (<p key={index}>{category.name} Duration {category.duration}</p>))} */}\n        \n            \n           </div>\n           \n           \n\n        <section className=\"hero-body\">\n       \n\n\n        </section>\n\n        {/* footer */}\n\n        <footer class=\"footer\">\n            <div class=\"content has-text-centered\">\n                <p>\n                <strong>ProDuckTiv</strong> by Paul Hsueh. Built with React and Rails. Styled with Bulma and Material-UI. \n                </p>\n            </div>\n        </footer>\n        </div>\n        </div>\n    )\n}\n\n\n/* CSV */\n// 00D1B2,02CBB4,04C4B7,05BEB9,07B7BB,09B1BD,0BAAC0,0DA4C2,0E9DC4,1097C7,1290C9,148ACB,1583CD,177DD0,1976D2\n\n/* Array */\n// [\"00D1B2\",\"02CBB4\",\"04C4B7\",\"05BEB9\",\"07B7BB\",\"09B1BD\",\"0BAAC0\",\"0DA4C2\",\"0E9DC4\",\"1097C7\",\"1290C9\",\"148ACB\",\"1583CD\",\"177DD0\",\"1976D2\"]\n\n","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/NewCategoryForm.js",[],"/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/NewGoalForm.js",[],"/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/CategoryContainer.js",["118"],"import React from 'react'\nimport Categories from './Categories'\nimport { Link } from 'react-router-dom'\n\nexport default function CategoryContainer(props) {\n\n\n\n    let arrCategories = props.categories.map((categories) => {\n        return <Categories key={categories.id} id={categories.id} name={categories.name} duration={categories.duration} userInfo={props.userInfo} deleteCategory={props.deleteCategory}/>\n    })\n\n\n    return (\n        <table className='table'>\n            <thead>\n                <tr>\n                    <h2>Categories</h2>\n                </tr>\n            </thead>\n            <tr>\n            {arrCategories}\n            </tr>\n        </table>\n    )\n}\n","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/Categories.js",["119","120"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function Categories(props) {\n\n    \n\n    const handleDelete = (e) => {\n\n        fetch(`http://localhost:3000/categories/${props.id}`, {\n            method: \"DELETE\",\n            headers: {\n                \"authorization\" : props.userInfo.token\n            }\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.id) {\n                    props.deleteCategory(res)\n                }\n            }) \n        }\n\n\n    return (\n        // <table className=\"table\">\n        // <thead>\n        //         <tr>\n        //             <th>Category</th>\n        //             <th>Hours</th>\n        //             <th>Edit</th>\n        //             <th>Delete</th>\n        //         </tr>\n        //     </thead>\n        //     <tbody>\n                <>\n                <tr> \n                    <td>{props.name}</td>\n                    <td>{props.duration} Hours</td>\n                    {/* <td><Link to='/editcategory'><button>Edit</button></Link></td> */}\n                    <td><a onClick={handleDelete}>Delete</a></td>\n                </tr>\n                </>\n        //     </tbody>                \n        // </table>\n    )\n}","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/GoalsContainer.js",["121"],"import React from 'react'\nimport Goals from './Goals'\n\nexport default function GoalContainer(props) {\n\n    const renderGoals = props.goalArr.map((goals, index) => {\n        return <Goals id={goals.id} deleteGoal={props.deleteGoal} key={goals.id} name={goals.name} start_date={goals.start_date} end_date={goals.end_date} token={props.token} />\n    })\n\n    const renderRows = props.goalArr.map((goals) => (\n        <tbody>\n            <td>{goals.name}</td>\n            <td>Start {goals.start_date}</td>\n            <td>End {goals.end_date}</td>\n            <td><button>Edit</button></td>\n            <td><button>Delete</button></td>\n        </tbody>\n\n    ))\n\n    return (\n        <div>\n            <br></br>\n            \n            <strong>{props.categoryName} Goals</strong>\n            <table className=\"table\">\n                {/* <tr>\n                    <td>Goal</td>\n                 </tr> */}\n                 <tr>\n                 <td>{renderGoals}</td>\n                 </tr>\n            </table>\n            \n        </div>\n    )\n}\n","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/NewTaskForm.js",["122"],"import React from 'react'\nimport { useState, useEffect } from 'react'\n\nexport default function NewTaskForm(props) {\n\n    const [taskInfo, setNewTaskInfo] = useState({\n        name: '', \n        description: '', \n        priority: '', \n        difficulty: '', \n        start_date: '', \n        end_date: '',\n        duration: '',\n        status_complete: false,\n        taskable_type: \"Category\",\n        taskable_id: 0\n    })\n    // const [goals, setGoals] = useState([])\n\n    // useEffect(() => {\n    //     const foundCategory = props.categories.find((category) => (\n    //         category.id === parseInt(taskInfo.category)))\n    //     let potentialGoals = foundCategory ? foundCategory.goals : []\n    //     setGoals(potentialGoals)\n    // }, [taskInfo.category])\n    \n    let allGoals = props.categories.map((category) => {\n        let modifiedGoals = category.goals.map((goal) => {\n            return {...goal, name: `${category.name} - ${goal.name}`}\n        })\n        return modifiedGoals \n    }).flat()\n\n    let arrOfOptions = taskInfo.taskable_type === \"Category\" ? props.categories : allGoals\n\n    const handleChange = (e) => {\n        setNewTaskInfo({\n            ...taskInfo,\n            [e.target.name]: e.target.value, \n        }) \n    }\n\n    const handleChangeRadio = (e) => {\n        setNewTaskInfo({\n            ...taskInfo,\n            [e.target.name]: e.target.value, \n            taskable_id: arrOfOptions[0] ? arrOfOptions[0].id : 0\n        }) \n    }\n\n    console.log(taskInfo)\n\n    const handleSubmit = (e) => { \n        e.preventDefault()\n        console.log(taskInfo)\n        fetch(\"http://localhost:3000/createtask\", {\n            method: \"POST\", \n            headers: {\n                \"content-type\": \"application/json\",\n                \"authorization\": props.userInfo.token\n                }, \n                body: JSON.stringify({\n                    name: taskInfo.name, \n                    description: taskInfo.description, \n                    priority: taskInfo.priority, \n                    difficulty: taskInfo.difficulty, \n                    start_date: taskInfo.start_date, \n                    end_date: taskInfo.end_date,\n                    duration: taskInfo.duration,\n                    taskable_type: taskInfo.taskable_type, \n                    taskable_id: taskInfo.taskable_id,\n                    status_complete: false\n                })\n            })\n                .then(res => res.json())\n                .then((task) => {\n                    if(task.id) {\n                        props.addTask(task)\n                    }\n                    setNewTaskInfo({\n                        name: '', \n                        description: '', \n                        priority: '', \n                        difficulty: '', \n                        start_date: '', \n                        end_date: '',\n                        duration: '',\n                        taskable_type: 'Category',\n                        taskable_id: 0,\n                        status_complete: false\n                    })\n\n                })\n    }\n\n    \n\n    return (\n        <div className=\"field\">\n            <form onSubmit={handleSubmit}>\n            \n            <label className=\"radio\" htmlFor=\"Category\">Category</label>\n            <input onChange={handleChangeRadio} checked={taskInfo.taskable_type === \"Category\"} name='taskable_type' value=\"Category\" id=\"Category\" type='radio'/>\n\n            \n\n            <label className=\"radio\" htmlFor=\"Goal\">Goal</label>   \n            <input onChange={handleChangeRadio} checked={taskInfo.taskable_type === \"Goal\"} name='taskable_type' value=\"Goal\" id=\"Goal\" type='radio'/> <br></br>\n\n            \n\n                \n\n            {/* <label htmlFor=\"category\">Category</label> */}\n                <select className=\"select\" onChange={handleChange} value={taskInfo.taskable_id} name=\"taskable_id\">\n                    <option value={0} disabled selected>Select</option>\n                    {arrOfOptions.map((taskableOption, index) => (\n                        <option key={taskableOption.id} value={taskableOption.id}>{taskableOption.name}</option>\n                    ))}\n                </select>\n\n\n\n                <label className=\"label\" htmlFor=\"name\">Name</label>\n                    <input className=\"input\" onChange={handleChange} value={taskInfo.name} id=\"text\" type=\"text\" name=\"name\"/>\n                <label className=\"label\" htmlFor=\"description\">Description</label>\n                    <input className=\"input\" onChange={handleChange} value={taskInfo.description} id=\"text\" type=\"text\" name=\"description\"/>\n                <label className=\"label\" htmlFor=\"priority\">Priority</label>\n                    <select onChange={handleChange} className=\"select\" value={taskInfo.priority} type=\"category\" name=\"priority\">\n                        <option value=\"\" disabled selected hidden>Select</option>\n                        <option>Must</option>\n                        <option>Should</option>\n                        <option>Want</option>\n                    </select>\n                <label className=\"label\" htmlFor=\"difficulty\">Difficulty</label>\n                    <select className=\"select\" onChange={handleChange} value={taskInfo.difficulty} \n                    type=\"category\" name=\"difficulty\">\n                        <option value=\"\" disabled selected hidden>Select</option>\n                        <option>Worst</option>\n                        <option>Not Bad</option>\n                        <option>Easy</option>\n                    </select>\n                <label className=\"label\" htmlFor=\"start_date\">Start Date</label>\n                    <input className=\"input\" onChange={handleChange} value={taskInfo.start_date} type=\"date\" name=\"start_date\"/>\n                <label className=\"label\" htmlFor=\"end_date\">End Date</label>\n                    <input className=\"input\" onChange={handleChange} value={taskInfo.end_date} type=\"date\" name=\"end_date\"/>\n                <label className=\"label\" htmlFor=\"duration\">Duration</label>\n                    <input className=\"input\" onChange={handleChange} value={taskInfo.duration} id=\"text\" type=\"text\" name=\"duration\"/>\n                \n           \n\n             \n\n\n\n                {/* <label htmlFor=\"goal\">Goal</label>\n                    <select onChange={handleChange} value={taskInfo.goal} type=\"text\"name=\"goal\">\n                        <option value=\"\" disabled selected hidden>Select</option>\n                        {goals.map((goals, index) => (\n                            <option key={goals.id} value={goals.id}>{goals.name}</option>\n                        ))}\n                    </select> */}\n                {/* <label htmlFor=\"status_complete\">Complete</label>\n                    <input onChange={handleChange} value={taskInfo.status_complete} type=\"checkbox\" name=\"status_complete\"/> */}\n                    <br></br>\n                    <br></br>\n                <button className=\"button is-primary\" value=\"submit\" type=\"submit\"><strong>Create Task</strong></button>\n            </form>\n        </div>\n    )\n}\n","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/Preferences.js",["123","124","125","126","127","128","129","130"],"import React from 'react'\nimport { Link } from 'react-router-dom';\n\n\nexport default function Preferences(props) {\n\n    const renderCategories = props.userInfo.categories.map((categories, index) => {\n        return <p key={categories.id}>{categories.name}, {categories.duration}</p>\n    })\n\n    const renderGoals = props.userInfo.categories.find((goals, index) => goals.goals)\n    \n    console.log(renderGoals)\n\n    return (\n        <div className=\"container\">\n            <div className=\"hero is-fullheight has-background-white\">\n            <nav class=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n                <div class=\"navbar-menu\">\n                    <div class=\"navbar-start\">\n                        <a class=\"navbar-item\">\n                        <Link to='/dashboard'>Dashboard</Link>\n                        </a>\n                        <a class=\"navbar-item\">\n                        <Link to='/preferences'>Preferences</Link>\n                        </a>\n                    <div class=\"navbar-item has-dropdown is-hoverable\">\n                        <a class=\"navbar-link\">\n                        More\n                        </a>\n                        <div class=\"navbar-dropdown\">\n                            <a class=\"navbar-item\">\n                                About\n                            </a>\n                            <a class=\"navbar-item\">\n                                Take a Break\n                            </a>\n                            <a class=\"navbar-item\">\n                                Contact\n                            </a>\n                            <hr class=\"navbar-divider\"/>\n                            <a class=\"navbar-item\">\n                                Report an issue\n                            </a>\n                        </div>\n                    </div>\n                    </div>\n                    <div class=\"navbar-end\">\n                    <div class=\"navbar-item\">\n                        <div class=\"buttons\">\n                        <a class=\"button\" onClick={props.logout}>\n                            Logout\n                        </a>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n            </nav>\n                <div className=\"content\">\n                    <div className=\"block\">\n                        <strong>Your Categories</strong>\n                        <p>{renderCategories}</p>\n                    </div>\n                </div>\n\n                <section className=\"hero-body\">\n       \n\n\n                </section>\n            </div>\n        </div>\n    )\n}","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/Goals.js",["131"],"import React from 'react'\n\nexport default function Goals(props) {\n\n    const handleDelete = (e) => {\n        fetch(`http://localhost:3000/goals/${props.id}`, {\n            method: \"DELETE\", \n            headers: {\n                \"authorization\" : props.token\n            }\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.id) {\n                    props.deleteGoal(res)\n                }\n            })\n\n    }\n\n    return (\n        <>\n                 {/* <tr>\n                     <td>Goal</td>\n                     <td>Start Date</td>\n                     <td>End Date</td>\n                 </tr> */}\n                <tr>\n                <td>{props.name}</td>\n                <td>{props.start_date}</td>\n                <td>{props.end_date}</td>\n                {/* <td><button>Edit</button></td> */}\n                <td><a onClick={handleDelete}>Delete</a></td>\n                </tr>\n       </>\n    )\n}\n","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/EditCategoryForm.js",[],"/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/TaskContainer.js",[],"/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/Tasks.js",["132"],"import React from 'react'\nimport { useState } from 'react'\nimport { Fragment } from 'react-is'\nimport TaskRows from './TaskRows'\n\nexport default function Tasks(props) {\n\n    console.log(props)\n\n    const renderTasks = props.taskInfo.tasks.map((task) => (\n        <TaskRows id={task.id} name={task.name} difficulty={task.difficulty} priority={task.priority} end_date={task.end_date} updateTask={props.updateTask} token={props.token}/>\n        // <tr>\n        // <td>{task.name}</td>\n        // <td>{task.difficulty}</td>\n        // <td>{task.priority}</td>\n        // <td>{task.end_date}</td>\n        // <td><input type=\"checkbox\" name=\"complete\" value=\"complete\"></input></td>\n        // </tr>\n    ))\n \n    return (\n        <table className=\"table\">\n        <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Difficulty</th>\n                    <th>Priority</th>\n                    <th>End Date</th>\n                    <th>Complete</th>\n                </tr>\n            </thead>\n\n\n        <tbody>\n            <Fragment>\n            {renderTasks}\n            </Fragment>\n        </tbody>\n\n        </table>\n    )\n}\n","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/TaskRows.js",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":29,"column":16,"nodeType":"139","messageId":"140","endLine":29,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":42,"column":5,"nodeType":"143","endLine":42,"endColumn":7,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":43,"column":25,"nodeType":"147","endLine":43,"endColumn":48},{"ruleId":"137","severity":1,"message":"148","line":2,"column":19,"nodeType":"139","messageId":"140","endLine":2,"endColumn":24},{"ruleId":"137","severity":1,"message":"149","line":2,"column":26,"nodeType":"139","messageId":"140","endLine":2,"endColumn":32},{"ruleId":"137","severity":1,"message":"150","line":2,"column":34,"nodeType":"139","messageId":"140","endLine":2,"endColumn":44},{"ruleId":"151","severity":1,"message":"152","line":10,"column":17,"nodeType":"147","endLine":10,"endColumn":52},{"ruleId":"145","severity":1,"message":"146","line":11,"column":17,"nodeType":"147","endLine":11,"endColumn":92},{"ruleId":"151","severity":1,"message":"153","line":15,"column":13,"nodeType":"147","endLine":15,"endColumn":40},{"ruleId":"133","replacedBy":"154"},{"ruleId":"135","replacedBy":"155"},{"ruleId":"137","severity":1,"message":"156","line":8,"column":10,"nodeType":"139","messageId":"140","endLine":8,"endColumn":25},{"ruleId":"137","severity":1,"message":"157","line":11,"column":10,"nodeType":"139","messageId":"140","endLine":11,"endColumn":18},{"ruleId":"151","severity":1,"message":"153","line":123,"column":13,"nodeType":"147","endLine":123,"endColumn":36},{"ruleId":"151","severity":1,"message":"153","line":127,"column":13,"nodeType":"147","endLine":127,"endColumn":36},{"ruleId":"151","severity":1,"message":"153","line":132,"column":17,"nodeType":"147","endLine":132,"endColumn":40},{"ruleId":"151","severity":1,"message":"153","line":137,"column":17,"nodeType":"147","endLine":137,"endColumn":40},{"ruleId":"151","severity":1,"message":"153","line":140,"column":17,"nodeType":"147","endLine":140,"endColumn":40},{"ruleId":"151","severity":1,"message":"153","line":143,"column":17,"nodeType":"147","endLine":143,"endColumn":40},{"ruleId":"151","severity":1,"message":"153","line":147,"column":17,"nodeType":"147","endLine":147,"endColumn":40},{"ruleId":"151","severity":1,"message":"153","line":157,"column":17,"nodeType":"147","endLine":157,"endColumn":58},{"ruleId":"137","severity":1,"message":"158","line":3,"column":10,"nodeType":"139","messageId":"140","endLine":3,"endColumn":14},{"ruleId":"137","severity":1,"message":"158","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":14},{"ruleId":"151","severity":1,"message":"153","line":41,"column":25,"nodeType":"147","endLine":41,"endColumn":51},{"ruleId":"137","severity":1,"message":"159","line":10,"column":11,"nodeType":"139","messageId":"140","endLine":10,"endColumn":21},{"ruleId":"137","severity":1,"message":"160","line":2,"column":20,"nodeType":"139","messageId":"140","endLine":2,"endColumn":29},{"ruleId":"151","severity":1,"message":"153","line":21,"column":25,"nodeType":"147","endLine":21,"endColumn":48},{"ruleId":"151","severity":1,"message":"153","line":24,"column":25,"nodeType":"147","endLine":24,"endColumn":48},{"ruleId":"151","severity":1,"message":"153","line":28,"column":25,"nodeType":"147","endLine":28,"endColumn":48},{"ruleId":"151","severity":1,"message":"153","line":32,"column":29,"nodeType":"147","endLine":32,"endColumn":52},{"ruleId":"151","severity":1,"message":"153","line":35,"column":29,"nodeType":"147","endLine":35,"endColumn":52},{"ruleId":"151","severity":1,"message":"153","line":38,"column":29,"nodeType":"147","endLine":38,"endColumn":52},{"ruleId":"151","severity":1,"message":"153","line":42,"column":29,"nodeType":"147","endLine":42,"endColumn":52},{"ruleId":"151","severity":1,"message":"153","line":51,"column":25,"nodeType":"147","endLine":51,"endColumn":66},{"ruleId":"151","severity":1,"message":"153","line":33,"column":21,"nodeType":"147","endLine":33,"endColumn":47},{"ruleId":"137","severity":1,"message":"157","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":18},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'setDate' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleResponse'. Either include it or remove the dependency array.","ArrayExpression",["163"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Route' is defined but never used.","'Switch' is defined but never used.","'withRouter' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["161"],["162"],"'FontAwesomeIcon' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'renderRows' is assigned a value but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},"Update the dependencies array to be: [handleResponse]",{"range":"166","text":"167"},[1188,1190],"[handleResponse]"]