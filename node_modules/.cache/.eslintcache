[{"/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/index.js":"1","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/reportWebVitals.js":"2","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/App.js":"3","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/SignUpForm.js":"4","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/LogInForm.js":"5","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/NavBar.js":"6","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/Home.js":"7","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/DashBoard.js":"8","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/NewCategoryForm.js":"9","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/NewGoalForm.js":"10","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/CategoryContainer.js":"11","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/Categories.js":"12","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/GoalsContainer.js":"13","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/NewTaskForm.js":"14","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/Preferences.js":"15","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/Goals.js":"16","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/EditCategoryForm.js":"17","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/TaskContainer.js":"18","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/Tasks.js":"19","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/TaskRows.js":"20"},{"size":544,"mtime":1627087743216,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1626891913429,"results":"23","hashOfConfig":"22"},{"size":6272,"mtime":1628187706038,"results":"24","hashOfConfig":"22"},{"size":2693,"mtime":1627498156067,"results":"25","hashOfConfig":"22"},{"size":3153,"mtime":1628049630137,"results":"26","hashOfConfig":"22"},{"size":666,"mtime":1627258169295,"results":"27","hashOfConfig":"22"},{"size":268,"mtime":1627325955278,"results":"28","hashOfConfig":"22"},{"size":9663,"mtime":1628185613842,"results":"29","hashOfConfig":"22"},{"size":1862,"mtime":1628131796873,"results":"30","hashOfConfig":"22"},{"size":2691,"mtime":1628135509364,"results":"31","hashOfConfig":"22"},{"size":676,"mtime":1628128812372,"results":"32","hashOfConfig":"22"},{"size":1257,"mtime":1628178486358,"results":"33","hashOfConfig":"22"},{"size":1041,"mtime":1628170991539,"results":"34","hashOfConfig":"22"},{"size":7094,"mtime":1628135610279,"results":"35","hashOfConfig":"22"},{"size":2632,"mtime":1628034873649,"results":"36","hashOfConfig":"22"},{"size":957,"mtime":1628181720472,"results":"37","hashOfConfig":"22"},{"size":144,"mtime":1628081013188,"results":"38","hashOfConfig":"22"},{"size":936,"mtime":1628177713602,"results":"39","hashOfConfig":"22"},{"size":1152,"mtime":1628177715601,"results":"40","hashOfConfig":"22"},{"size":959,"mtime":1628183580136,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"13ipukz",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/index.js",[],["93","94"],"/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/reportWebVitals.js",[],"/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/App.js",["95","96"],"/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/SignUpForm.js",[],"/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/LogInForm.js",["97"],"// import React, { Component } from 'react';\nimport 'bulma/css/bulma.min.css';\nimport { useState } from 'react';\nimport { withRouter } from 'react-router';\nimport { Link} from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport { CardContent } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 500,\n    }\n})\n\nfunction LoginForm(props) {\n\n    const classes = useStyles();\n\n    const [loginInfo, setLoginInfo] = useState({\n        username:'',\n        password:''\n    })\n\n    const handleChange = (event) => {\n        setLoginInfo({\n            ...loginInfo,\n            [event.target.name]: event.target.value\n        })\n    } \n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        props.login(loginInfo)\n    }\n\n    return (\n\n        <section class=\"section\">\n\t\t\t<div class=\"container\">\n\t\t\t\t<div class=\"columns\">\n\t\t\t\t\t<div class=\"column\">\n                        <img src=\"./logo.gif\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"column\">\n                    <br></br>\n                    <br></br>\n                    <br></br>\n                    <br></br>\n                    <br></br>\n                    <br></br>\n                    \n                    <Card className={classes.root}> \n                        <CardContent>\n                        <br></br>\n                        <strong>\"Quack quack, let's be productive\"</strong>\n                        <br></br>\n                        <br></br> \n                        <form onSubmit={handleSubmit}>\n                            <p className=\"control has-icons-left has-icons-right\">\n                                <input className=\"input\" type=\"email\" placeholder=\"Email\" name='username' value={loginInfo.username} onChange={handleChange}/>\n                                <span className=\"icon is-small is-left\">\n                                    <i className=\"fas fa-envelope\"></i>\n                                </span>\n                                <span className=\"icon is-small is-right\">\n                                <i className=\"fas fa-check\"></i>\n                                </span>\n                                </p>\n                                <br></br>\n                            <p className=\"control has-icons-left\">\n                                <input className=\"input\" type=\"password\" placeholder=\"Password\" name='password' value={loginInfo.password}onChange={handleChange}/>\n                                <span className=\"icon is-small is-left\">\n                                    <i className=\"fas fa-lock\"></i>\n                                </span>\n                            </p>\n                            <br></br>\n                            <button className=\"button is-primary\"><strong>Log In</strong></button>\n                        </form>\n                        <br></br>\n                        <Link to='/signup'>Create an account</Link> \n                        </CardContent>\n                        </Card>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\n  \n    )\n}\n\nexport default withRouter(LoginForm)","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/NavBar.js",["98","99","100","101","102","103"],"import React from 'react';\nimport { NavLink, Route, Switch, withRouter } from 'react-router-dom';\nimport 'bulma/css/bulma.min.css';\n\nexport default function NavBar() {\n    return (\n        <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n            <NavBar>\n            <div className=\"navbar-brand\">\n                <a className=\"navbar-item\" href=\"\">\n                <img src=\"https://bulma.io/images/bulma-logo.png\" width=\"112\" height=\"28\"/>\n                </a>\n            </div>\n\n            <a className=\"navBar-item\">\n                <NavLink to=\"/login\">Log In</NavLink>\n            </a>\n            </NavBar>\n        </nav>\n    )\n}\n",["104","105"],"/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/Home.js",[],"/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/DashBoard.js",["106","107","108","109","110","111","112","113","114","115"],"/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/NewCategoryForm.js",[],"/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/NewGoalForm.js",[],"/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/CategoryContainer.js",["116"],"import React from 'react'\nimport Categories from './Categories'\nimport { Link } from 'react-router-dom'\n\nexport default function CategoryContainer(props) {\n\n\n\n    let arrCategories = props.categories.map((categories) => {\n        return <Categories key={categories.id} id={categories.id} name={categories.name} duration={categories.duration} userInfo={props.userInfo} deleteCategory={props.deleteCategory}/>\n    })\n\n\n    return (\n        <table className='table'>\n            <thead>\n                <tr>\n                    <h2>Categories</h2>\n                </tr>\n            </thead>\n            <tr>\n            {arrCategories}\n            </tr>\n        </table>\n    )\n}\n","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/Categories.js",["117","118"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function Categories(props) {\n\n    \n\n    const handleDelete = (e) => {\n\n        fetch(`http://localhost:3000/categories/${props.id}`, {\n            method: \"DELETE\",\n            headers: {\n                \"authorization\" : props.userInfo.token\n            }\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.id) {\n                    props.deleteCategory(res)\n                }\n            }) \n        }\n\n\n    return (\n        // <table className=\"table\">\n        // <thead>\n        //         <tr>\n        //             <th>Category</th>\n        //             <th>Hours</th>\n        //             <th>Edit</th>\n        //             <th>Delete</th>\n        //         </tr>\n        //     </thead>\n        //     <tbody>\n                <>\n                <tr> \n                    <td>{props.name}</td>\n                    <td>{props.duration} Hours</td>\n                    {/* <td><Link to='/editcategory'><button>Edit</button></Link></td> */}\n                    <td><a onClick={handleDelete}>Delete</a></td>\n                </tr>\n                </>\n        //     </tbody>                \n        // </table>\n    )\n}","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/GoalsContainer.js",["119"],"import React from 'react'\nimport Goals from './Goals'\n\nexport default function GoalContainer(props) {\n\n    const renderGoals = props.goalArr.map((goals, index) => {\n        return <Goals id={goals.id} deleteGoal={props.deleteGoal} key={goals.id} name={goals.name} start_date={goals.start_date} end_date={goals.end_date} token={props.token} />\n    })\n\n    const renderRows = props.goalArr.map((goals) => (\n        <tbody>\n            <td>{goals.name}</td>\n            <td>Start {goals.start_date}</td>\n            <td>End {goals.end_date}</td>\n            <td><button>Edit</button></td>\n            <td><button>Delete</button></td>\n        </tbody>\n\n    ))\n\n    return (\n        <div>\n            <br></br>\n            \n            <strong>{props.categoryName} Goals</strong>\n            <table className=\"table\">\n                {/* <tr>\n                    <td>Goal</td>\n                 </tr> */}\n                 <tr>\n                 <td>{renderGoals}</td>\n                 </tr>\n            </table>\n            \n        </div>\n    )\n}\n","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/NewTaskForm.js",["120"],"import React from 'react'\nimport { useState, useEffect } from 'react'\n\nexport default function NewTaskForm(props) {\n\n    const [taskInfo, setNewTaskInfo] = useState({\n        name: '', \n        description: '', \n        priority: '', \n        difficulty: '', \n        start_date: '', \n        end_date: '',\n        duration: '',\n        status_complete: false,\n        taskable_type: \"Category\",\n        taskable_id: 0\n    })\n    // const [goals, setGoals] = useState([])\n\n    // useEffect(() => {\n    //     const foundCategory = props.categories.find((category) => (\n    //         category.id === parseInt(taskInfo.category)))\n    //     let potentialGoals = foundCategory ? foundCategory.goals : []\n    //     setGoals(potentialGoals)\n    // }, [taskInfo.category])\n    \n    let allGoals = props.categories.map((category) => {\n        let modifiedGoals = category.goals.map((goal) => {\n            return {...goal, name: `${category.name} - ${goal.name}`}\n        })\n        return modifiedGoals \n    }).flat()\n\n    let arrOfOptions = taskInfo.taskable_type === \"Category\" ? props.categories : allGoals\n\n    const handleChange = (e) => {\n        setNewTaskInfo({\n            ...taskInfo,\n            [e.target.name]: e.target.value, \n        }) \n    }\n\n    const handleChangeRadio = (e) => {\n        setNewTaskInfo({\n            ...taskInfo,\n            [e.target.name]: e.target.value, \n            taskable_id: arrOfOptions[0] ? arrOfOptions[0].id : 0\n        }) \n    }\n\n    console.log(taskInfo)\n\n    const handleSubmit = (e) => { \n        e.preventDefault()\n        console.log(taskInfo)\n        fetch(\"http://localhost:3000/createtask\", {\n            method: \"POST\", \n            headers: {\n                \"content-type\": \"application/json\",\n                \"authorization\": props.userInfo.token\n                }, \n                body: JSON.stringify({\n                    name: taskInfo.name, \n                    description: taskInfo.description, \n                    priority: taskInfo.priority, \n                    difficulty: taskInfo.difficulty, \n                    start_date: taskInfo.start_date, \n                    end_date: taskInfo.end_date,\n                    duration: taskInfo.duration,\n                    taskable_type: taskInfo.taskable_type, \n                    taskable_id: taskInfo.taskable_id,\n                    status_complete: false\n                })\n            })\n                .then(res => res.json())\n                .then((task) => {\n                    if(task.id) {\n                        props.addTask(task)\n                    }\n                    setNewTaskInfo({\n                        name: '', \n                        description: '', \n                        priority: '', \n                        difficulty: '', \n                        start_date: '', \n                        end_date: '',\n                        duration: '',\n                        taskable_type: 'Category',\n                        taskable_id: 0,\n                        status_complete: false\n                    })\n\n                })\n    }\n\n    \n\n    return (\n        <div className=\"field\">\n            <form onSubmit={handleSubmit}>\n            \n            <label className=\"radio\" htmlFor=\"Category\">Category</label>\n            <input onChange={handleChangeRadio} checked={taskInfo.taskable_type === \"Category\"} name='taskable_type' value=\"Category\" id=\"Category\" type='radio'/>\n\n            \n\n            <label className=\"radio\" htmlFor=\"Goal\">Goal</label>   \n            <input onChange={handleChangeRadio} checked={taskInfo.taskable_type === \"Goal\"} name='taskable_type' value=\"Goal\" id=\"Goal\" type='radio'/> <br></br>\n\n            \n\n                \n\n            {/* <label htmlFor=\"category\">Category</label> */}\n                <select className=\"select\" onChange={handleChange} value={taskInfo.taskable_id} name=\"taskable_id\">\n                    <option value={0} disabled selected>Select</option>\n                    {arrOfOptions.map((taskableOption, index) => (\n                        <option key={taskableOption.id} value={taskableOption.id}>{taskableOption.name}</option>\n                    ))}\n                </select>\n\n\n\n                <label className=\"label\" htmlFor=\"name\">Name</label>\n                    <input className=\"input\" onChange={handleChange} value={taskInfo.name} id=\"text\" type=\"text\" name=\"name\"/>\n                <label className=\"label\" htmlFor=\"description\">Description</label>\n                    <input className=\"input\" onChange={handleChange} value={taskInfo.description} id=\"text\" type=\"text\" name=\"description\"/>\n                <label className=\"label\" htmlFor=\"priority\">Priority</label>\n                    <select onChange={handleChange} className=\"select\" value={taskInfo.priority} type=\"category\" name=\"priority\">\n                        <option value=\"\" disabled selected hidden>Select</option>\n                        <option>Must</option>\n                        <option>Should</option>\n                        <option>Want</option>\n                    </select>\n                <label className=\"label\" htmlFor=\"difficulty\">Difficulty</label>\n                    <select className=\"select\" onChange={handleChange} value={taskInfo.difficulty} \n                    type=\"category\" name=\"difficulty\">\n                        <option value=\"\" disabled selected hidden>Select</option>\n                        <option>Worst</option>\n                        <option>Not Bad</option>\n                        <option>Easy</option>\n                    </select>\n                <label className=\"label\" htmlFor=\"start_date\">Start Date</label>\n                    <input className=\"input\" onChange={handleChange} value={taskInfo.start_date} type=\"date\" name=\"start_date\"/>\n                <label className=\"label\" htmlFor=\"end_date\">End Date</label>\n                    <input className=\"input\" onChange={handleChange} value={taskInfo.end_date} type=\"date\" name=\"end_date\"/>\n                <label className=\"label\" htmlFor=\"duration\">Duration</label>\n                    <input className=\"input\" onChange={handleChange} value={taskInfo.duration} id=\"text\" type=\"text\" name=\"duration\"/>\n                \n           \n\n             \n\n\n\n                {/* <label htmlFor=\"goal\">Goal</label>\n                    <select onChange={handleChange} value={taskInfo.goal} type=\"text\"name=\"goal\">\n                        <option value=\"\" disabled selected hidden>Select</option>\n                        {goals.map((goals, index) => (\n                            <option key={goals.id} value={goals.id}>{goals.name}</option>\n                        ))}\n                    </select> */}\n                {/* <label htmlFor=\"status_complete\">Complete</label>\n                    <input onChange={handleChange} value={taskInfo.status_complete} type=\"checkbox\" name=\"status_complete\"/> */}\n                    <br></br>\n                    <br></br>\n                <button className=\"button is-primary\" value=\"submit\" type=\"submit\"><strong>Create Task</strong></button>\n            </form>\n        </div>\n    )\n}\n","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/Preferences.js",["121","122","123","124","125","126","127","128"],"import React from 'react'\nimport { Link } from 'react-router-dom';\n\n\nexport default function Preferences(props) {\n\n    const renderCategories = props.userInfo.categories.map((categories, index) => {\n        return <p key={categories.id}>{categories.name}, {categories.duration}</p>\n    })\n\n    const renderGoals = props.userInfo.categories.find((goals, index) => goals.goals)\n    \n    console.log(renderGoals)\n\n    return (\n        <div className=\"container\">\n            <div className=\"hero is-fullheight has-background-white\">\n            <nav class=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n                <div class=\"navbar-menu\">\n                    <div class=\"navbar-start\">\n                        <a class=\"navbar-item\">\n                        <Link to='/dashboard'>Dashboard</Link>\n                        </a>\n                        <a class=\"navbar-item\">\n                        <Link to='/preferences'>Preferences</Link>\n                        </a>\n                    <div class=\"navbar-item has-dropdown is-hoverable\">\n                        <a class=\"navbar-link\">\n                        More\n                        </a>\n                        <div class=\"navbar-dropdown\">\n                            <a class=\"navbar-item\">\n                                About\n                            </a>\n                            <a class=\"navbar-item\">\n                                Take a Break\n                            </a>\n                            <a class=\"navbar-item\">\n                                Contact\n                            </a>\n                            <hr class=\"navbar-divider\"/>\n                            <a class=\"navbar-item\">\n                                Report an issue\n                            </a>\n                        </div>\n                    </div>\n                    </div>\n                    <div class=\"navbar-end\">\n                    <div class=\"navbar-item\">\n                        <div class=\"buttons\">\n                        <a class=\"button\" onClick={props.logout}>\n                            Logout\n                        </a>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n            </nav>\n                <div className=\"content\">\n                    <div className=\"block\">\n                        <strong>Your Categories</strong>\n                        <p>{renderCategories}</p>\n                    </div>\n                </div>\n\n                <section className=\"hero-body\">\n       \n\n\n                </section>\n            </div>\n        </div>\n    )\n}","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/Goals.js",["129"],"import React from 'react'\n\nexport default function Goals(props) {\n\n    const handleDelete = (e) => {\n        fetch(`http://localhost:3000/goals/${props.id}`, {\n            method: \"DELETE\", \n            headers: {\n                \"authorization\" : props.token\n            }\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.id) {\n                    props.deleteGoal(res)\n                }\n            })\n\n    }\n\n    return (\n        <>\n                 {/* <tr>\n                     <td>Goal</td>\n                     <td>Start Date</td>\n                     <td>End Date</td>\n                 </tr> */}\n                <tr>\n                <td>{props.name}</td>\n                <td>{props.start_date}</td>\n                <td>{props.end_date}</td>\n                {/* <td><button>Edit</button></td> */}\n                <td><a onClick={handleDelete}>Delete</a></td>\n                </tr>\n       </>\n    )\n}\n","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/EditCategoryForm.js",[],"/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/TaskContainer.js",[],"/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/Tasks.js",["130"],"import React from 'react'\nimport { useState } from 'react'\nimport { Fragment } from 'react-is'\nimport TaskRows from './TaskRows'\n\nexport default function Tasks(props) {\n\n    console.log(props)\n\n    const renderTasks = props.taskInfo.tasks.map((task) => (\n        <TaskRows id={task.id} name={task.name} difficulty={task.difficulty} priority={task.priority} end_date={task.end_date} updateTask={props.updateTask} token={props.token}/>\n        // <tr>\n        // <td>{task.name}</td>\n        // <td>{task.difficulty}</td>\n        // <td>{task.priority}</td>\n        // <td>{task.end_date}</td>\n        // <td><input type=\"checkbox\" name=\"complete\" value=\"complete\"></input></td>\n        // </tr>\n    ))\n \n    return (\n        <table className=\"table\">\n        <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Difficulty</th>\n                    <th>Priority</th>\n                    <th>End Date</th>\n                    <th>Complete</th>\n                </tr>\n            </thead>\n\n\n        <tbody>\n            <Fragment>\n            {renderTasks}\n            </Fragment>\n        </tbody>\n\n        </table>\n    )\n}\n","/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/TaskRows.js",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":29,"column":16,"nodeType":"137","messageId":"138","endLine":29,"endColumn":23},{"ruleId":"139","severity":1,"message":"140","line":42,"column":5,"nodeType":"141","endLine":42,"endColumn":7,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":43,"column":25,"nodeType":"145","endLine":43,"endColumn":48},{"ruleId":"135","severity":1,"message":"146","line":2,"column":19,"nodeType":"137","messageId":"138","endLine":2,"endColumn":24},{"ruleId":"135","severity":1,"message":"147","line":2,"column":26,"nodeType":"137","messageId":"138","endLine":2,"endColumn":32},{"ruleId":"135","severity":1,"message":"148","line":2,"column":34,"nodeType":"137","messageId":"138","endLine":2,"endColumn":44},{"ruleId":"149","severity":1,"message":"150","line":10,"column":17,"nodeType":"145","endLine":10,"endColumn":52},{"ruleId":"143","severity":1,"message":"144","line":11,"column":17,"nodeType":"145","endLine":11,"endColumn":92},{"ruleId":"149","severity":1,"message":"151","line":15,"column":13,"nodeType":"145","endLine":15,"endColumn":40},{"ruleId":"131","replacedBy":"152"},{"ruleId":"133","replacedBy":"153"},{"ruleId":"135","severity":1,"message":"154","line":8,"column":10,"nodeType":"137","messageId":"138","endLine":8,"endColumn":25},{"ruleId":"135","severity":1,"message":"155","line":11,"column":10,"nodeType":"137","messageId":"138","endLine":11,"endColumn":18},{"ruleId":"149","severity":1,"message":"151","line":123,"column":13,"nodeType":"145","endLine":123,"endColumn":36},{"ruleId":"149","severity":1,"message":"151","line":127,"column":13,"nodeType":"145","endLine":127,"endColumn":36},{"ruleId":"149","severity":1,"message":"151","line":132,"column":17,"nodeType":"145","endLine":132,"endColumn":40},{"ruleId":"149","severity":1,"message":"151","line":137,"column":17,"nodeType":"145","endLine":137,"endColumn":40},{"ruleId":"149","severity":1,"message":"151","line":140,"column":17,"nodeType":"145","endLine":140,"endColumn":40},{"ruleId":"149","severity":1,"message":"151","line":143,"column":17,"nodeType":"145","endLine":143,"endColumn":40},{"ruleId":"149","severity":1,"message":"151","line":147,"column":17,"nodeType":"145","endLine":147,"endColumn":40},{"ruleId":"149","severity":1,"message":"151","line":157,"column":17,"nodeType":"145","endLine":157,"endColumn":58},{"ruleId":"135","severity":1,"message":"156","line":3,"column":10,"nodeType":"137","messageId":"138","endLine":3,"endColumn":14},{"ruleId":"135","severity":1,"message":"156","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":14},{"ruleId":"149","severity":1,"message":"151","line":41,"column":25,"nodeType":"145","endLine":41,"endColumn":51},{"ruleId":"135","severity":1,"message":"157","line":10,"column":11,"nodeType":"137","messageId":"138","endLine":10,"endColumn":21},{"ruleId":"135","severity":1,"message":"158","line":2,"column":20,"nodeType":"137","messageId":"138","endLine":2,"endColumn":29},{"ruleId":"149","severity":1,"message":"151","line":21,"column":25,"nodeType":"145","endLine":21,"endColumn":48},{"ruleId":"149","severity":1,"message":"151","line":24,"column":25,"nodeType":"145","endLine":24,"endColumn":48},{"ruleId":"149","severity":1,"message":"151","line":28,"column":25,"nodeType":"145","endLine":28,"endColumn":48},{"ruleId":"149","severity":1,"message":"151","line":32,"column":29,"nodeType":"145","endLine":32,"endColumn":52},{"ruleId":"149","severity":1,"message":"151","line":35,"column":29,"nodeType":"145","endLine":35,"endColumn":52},{"ruleId":"149","severity":1,"message":"151","line":38,"column":29,"nodeType":"145","endLine":38,"endColumn":52},{"ruleId":"149","severity":1,"message":"151","line":42,"column":29,"nodeType":"145","endLine":42,"endColumn":52},{"ruleId":"149","severity":1,"message":"151","line":51,"column":25,"nodeType":"145","endLine":51,"endColumn":66},{"ruleId":"149","severity":1,"message":"151","line":33,"column":21,"nodeType":"145","endLine":33,"endColumn":47},{"ruleId":"135","severity":1,"message":"155","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":18},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'setDate' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleResponse'. Either include it or remove the dependency array.","ArrayExpression",["161"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Route' is defined but never used.","'Switch' is defined but never used.","'withRouter' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["159"],["160"],"'FontAwesomeIcon' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'renderRows' is assigned a value but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},"Update the dependencies array to be: [handleResponse]",{"range":"164","text":"165"},[1188,1190],"[handleResponse]"]