{"ast":null,"code":"var _jsxFileName = \"/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/NewGoalForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewGoalForm(props) {\n  _s();\n\n  const [goalInfo, setNewGoalInfo] = useState({\n    name: '',\n    start_date: '',\n    end_date: '',\n    category: ''\n  });\n\n  const handleChange = e => {\n    setNewGoalInfo({ ...goalInfo,\n      [e.target.name]: e.target.value\n    });\n  }; // console.log(goalInfo)\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(\"http://localhost:3000/creategoal\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"authorization\": props.userInfo.token\n      },\n      body: JSON.stringify({\n        name: goalInfo.name,\n        start_date: goalInfo.start_date,\n        end_date: goalInfo.end_date,\n        category_id: goalInfo.category\n      })\n    }).then(res => res.json()).then(goal => {\n      props.addGoal(goal);\n      setNewGoalInfo({\n        name: '',\n        start_date: '',\n        end_date: '',\n        category: ''\n      });\n    });\n  }; // console.log(props.userInfo.categories)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        htmlFor: \"category\",\n        children: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"select\",\n        type: \"category\",\n        id: \"category\",\n        name: \"category\",\n        value: goalInfo.category,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          selected: true,\n          hidden: true,\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), props.userInfo.categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.id,\n          children: category.name\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 74\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        value: goalInfo.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        htmlFor: \"start_date\",\n        children: \"Start Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"date\",\n        id: \"start_date\",\n        name: \"start_date\",\n        value: goalInfo.start_date,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        htmlFor: \"end_date\",\n        children: \"End Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"date\",\n        id: \"end_date\",\n        name: \"end_date\",\n        value: goalInfo.end_date,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-primary\",\n        type: \"submit\",\n        value: \"Create\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Create Goal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 81\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewGoalForm, \"XfyWQ/b8+ZHcOj+GTlZYXTFG5v4=\");\n\n_c = NewGoalForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewGoalForm\");","map":{"version":3,"sources":["/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/NewGoalForm.js"],"names":["React","useState","NewGoalForm","props","goalInfo","setNewGoalInfo","name","start_date","end_date","category","handleChange","e","target","value","handleSubmit","preventDefault","fetch","method","headers","userInfo","token","body","JSON","stringify","category_id","then","res","json","goal","addGoal","categories","map","index","id"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\n\nexport default function NewGoalForm(props) {\n\n    const [goalInfo, setNewGoalInfo] = useState({\n        name: '', \n        start_date: '',\n        end_date: '', \n        category: ''\n    })\n\n    const handleChange = (e) => {\n        setNewGoalInfo({\n            ...goalInfo,\n            [e.target.name]: e.target.value\n        }) \n    }\n\n    // console.log(goalInfo)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        fetch(\"http://localhost:3000/creategoal\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n                \"authorization\": props.userInfo.token\n            },\n            body: JSON.stringify({\n                name: goalInfo.name,\n                start_date: goalInfo.start_date,\n                end_date: goalInfo.end_date,\n                category_id: goalInfo.category\n                })\n            })\n            .then(res => res.json())\n            .then((goal) => {\n                props.addGoal(goal)\n                setNewGoalInfo({\n                    name: '', \n                    start_date: '',\n                    end_date: '', \n                    category: ''\n                })\n        })\n    }\n\n    // console.log(props.userInfo.categories)\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <label className=\"label\"htmlFor=\"category\">Category</label>\n                <select className=\"select\" type=\"category\" id=\"category\" name=\"category\" value={goalInfo.category} onChange={handleChange}>\n                    <option value=\"\" disabled selected hidden>Select</option>\n                    {props.userInfo.categories.map((category, index) => (<option key={category.id} value={category.id}>{category.name}</option>))}\n                </select>\n                <label className=\"label\"htmlFor=\"name\">Name</label>\n                <input className=\"input\" type=\"text\" id=\"name\" name=\"name\" value={goalInfo.name} onChange={handleChange}/>\n                <label className=\"label\"htmlFor=\"start_date\">Start Date</label>\n                <input className=\"input\" type=\"date\" id=\"start_date\" name=\"start_date\" value={goalInfo.start_date} onChange={handleChange}/>\n                <label className=\"label\"htmlFor=\"end_date\">End Date</label>\n                <input className=\"input\" type=\"date\" id=\"end_date\" name=\"end_date\" value={goalInfo.end_date} onChange={handleChange}/>\n                \n                <button className=\"button-primary\" type=\"submit\" value=\"Create\"><strong>Create Goal</strong></button>\n            </form>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}