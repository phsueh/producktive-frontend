{"ast":null,"code":"var _jsxFileName = \"/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/NewTaskForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewTaskForm(props) {\n  _s();\n\n  const [taskInfo, setNewTaskInfo] = useState({\n    name: '',\n    description: '',\n    priority: '',\n    difficulty: '',\n    start_date: '',\n    end_date: '',\n    duration: '',\n    category: '',\n    goal: '',\n    status_complete: false\n  });\n\n  const handleChange = e => {\n    setNewTaskInfo({ ...taskInfo,\n      [e.target.name]: e.target.value\n    });\n  }; // const handleSubmit = (e) => { \n  //     e.preventDefault()\n  //     fetch(\"http://localhost:3000/createtask\", {\n  //         method: \"POST\", \n  //         headers: {\n  //             \"content-type\": \"application/json\",\n  //             \"authorization\": props.userInfo.token\n  //             }, \n  //             body: JSON.stringify({\n  //                 name: taskInfo.name,\n  //                 duration: taskInfo.duration\n  //             })\n  //         })\n  //             .then(res => res.json())\n  //             .then((res) => \n  //                 (console.log(res))\n  //             )\n  // }\n\n\n  console.log(taskInfo);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: taskInfo.name,\n        id: \"text\",\n        type: \"text\",\n        name: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: taskInfo.description,\n        id: \"text\",\n        type: \"text\",\n        name: \"description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"priority\",\n        children: \"Priority\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleChange,\n        value: taskInfo.priority,\n        type: \"category\",\n        name: \"priority\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Must\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Should\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Want\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"difficulty\",\n        children: \"Difficulty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleChange,\n        value: taskInfo.difficulty,\n        type: \"category\",\n        name: \"difficulty\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Worst\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Not Bad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Easy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"start_date\",\n        children: \"Start Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: taskInfo.start_date,\n        type: \"date\",\n        name: \"start_date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"end_date\",\n        children: \"End Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: taskInfo.end_date,\n        type: \"date\",\n        name: \"end_date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"duration\",\n        children: \"Duration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: taskInfo.duration,\n        id: \"text\",\n        type: \"text\",\n        name: \"duration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"category\",\n        children: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: taskInfo.category,\n        type: \"category\",\n        name: \"category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"goal\",\n        children: \"Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: taskInfo.goal,\n        type: \"category\",\n        name: \"goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"status_complete\",\n        children: \"Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: taskInfo.status_complete,\n        type: \"checkbox\",\n        name: \"status_complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onChange: handleChange,\n        value: \"submit\",\n        type: \"button\",\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewTaskForm, \"C34c4mZkbKJw7wNai2jip2I279M=\");\n\n_c = NewTaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTaskForm\");","map":{"version":3,"sources":["/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/NewTaskForm.js"],"names":["React","useState","NewTaskForm","props","taskInfo","setNewTaskInfo","name","description","priority","difficulty","start_date","end_date","duration","category","goal","status_complete","handleChange","e","target","value","console","log"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\n\nexport default function NewTaskForm(props) {\n\n    const [taskInfo, setNewTaskInfo] = useState({\n        name: '', \n        description: '', \n        priority: '', \n        difficulty: '', \n        start_date: '', \n        end_date: '',\n        duration: '',\n        category: '',\n        goal: '',\n        status_complete: false\n    })\n\n    const handleChange = (e) => {\n        setNewTaskInfo({\n            ...taskInfo,\n            [e.target.name]: e.target.value\n        }) \n    }\n\n    // const handleSubmit = (e) => { \n    //     e.preventDefault()\n    //     fetch(\"http://localhost:3000/createtask\", {\n    //         method: \"POST\", \n    //         headers: {\n    //             \"content-type\": \"application/json\",\n    //             \"authorization\": props.userInfo.token\n    //             }, \n    //             body: JSON.stringify({\n    //                 name: taskInfo.name,\n    //                 duration: taskInfo.duration\n    //             })\n    //         })\n    //             .then(res => res.json())\n    //             .then((res) => \n    //                 (console.log(res))\n    //             )\n    // }\n\n    console.log(taskInfo)\n\n    return (\n        <div>\n            <form>\n                <label htmlFor=\"name\">Name</label>\n                    <input onChange={handleChange} value={taskInfo.name} id=\"text\" type=\"text\" name=\"name\"/>\n                <label htmlFor=\"description\">Description</label>\n                    <input onChange={handleChange} value={taskInfo.description} id=\"text\" type=\"text\" name=\"description\"/>\n                <label htmlFor=\"priority\">Priority</label>\n                    <select onChange={handleChange} value={taskInfo.priority} type=\"category\" name=\"priority\">\n                        <option>Must</option>\n                        <option>Should</option>\n                        <option>Want</option>\n                    </select>\n                <label htmlFor=\"difficulty\">Difficulty</label>\n                    <select onChange={handleChange} value={taskInfo.difficulty} \n                    type=\"category\" name=\"difficulty\">\n                        <option>Worst</option>\n                        <option>Not Bad</option>\n                        <option>Easy</option>\n                    </select>\n                <label htmlFor=\"start_date\">Start Date</label>\n                    <input onChange={handleChange} value={taskInfo.start_date} type=\"date\" name=\"start_date\"/>\n                <label htmlFor=\"end_date\">End Date</label>\n                    <input onChange={handleChange} value={taskInfo.end_date} type=\"date\" name=\"end_date\"/>\n                <label htmlFor=\"duration\">Duration</label>\n                    <input onChange={handleChange} value={taskInfo.duration} id=\"text\" type=\"text\" name=\"duration\"/>\n                <label htmlFor=\"category\">Category</label>\n                    <input onChange={handleChange} value={taskInfo.category} type=\"category\"name=\"category\"/>\n                <label htmlFor=\"goal\">Goal</label>\n                    <input onChange={handleChange} value={taskInfo.goal} type=\"category\"name=\"goal\"/>\n                <label htmlFor=\"status_complete\">Complete</label>\n                    <input onChange={handleChange} value={taskInfo.status_complete} type=\"checkbox\" name=\"status_complete\"/>\n                <button onChange={handleChange} value=\"submit\" type=\"button\">Create Task</button>\n            </form>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}