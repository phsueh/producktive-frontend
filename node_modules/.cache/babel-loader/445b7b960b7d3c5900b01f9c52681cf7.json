{"ast":null,"code":"var _jsxFileName = \"/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport React, { Component } from 'react';\nimport 'bulma/css/bulma.min.css';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { useState } from 'react';\nimport LogInForm from './components/LogInForm';\nimport SignUpForm from './components/SignUpForm';\nimport NavBar from './components/NavBar';\nimport DashBoard from './components/DashBoard';\nimport { responsiveFontSizes } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const [userInfo, setUserInfo] = useState({\n    id: 0,\n    name: '',\n    username: '',\n    quote: '',\n    token: \"\",\n    goals: []\n  });\n\n  const handleSignUp = userInfo => {\n    console.log(\"Create account form has been submitted\");\n    console.log(userInfo);\n    fetch(\"http://localhost:3000/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: userInfo.name,\n        username: userInfo.username,\n        password: userInfo.password,\n        quote: userInfo.quote\n      })\n    }).then(res => res.json()).then(handleResponse);\n  };\n\n  const handleResponse = resp => {\n    console.log(resp);\n\n    if (resp.token) {\n      setUserInfo({\n        id: resp.user.id,\n        username: resp.user.username,\n        name: resp.user.name,\n        quote: resp.user.quote,\n        token: resp.token\n      });\n      alert(\"Account created or logged in successfully!\");\n      props.history.push(\"/dashboard\");\n    } else {\n      alert(\"Request error\");\n    }\n  };\n\n  const handleLogin = userInfo => {\n    console.log(userInfo);\n    fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: userInfo.username,\n        password: userInfo.password\n      })\n    }).then(res => res.json()).then(handleResponse);\n  };\n\n  const renderDashBoard = routerProps => {\n    return /*#__PURE__*/_jsxDEV(DashBoard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"level-item has-text-centered\",\n          children: /*#__PURE__*/_jsxDEV(LogInForm, {\n            login: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/signup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"level-item has-text-centered\",\n          children: /*#__PURE__*/_jsxDEV(SignUpForm, {\n            signUp: handleSignUp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/dashboard\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"level-item has-text-centered\",\n          children: /*#__PURE__*/_jsxDEV(DashBoard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Fs7XZLM26NHJkalDhs6TwAT+KHI=\");\n\n_c = App;\nexport default _c2 = withRouter(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/App.js"],"names":["React","Component","Route","Switch","withRouter","useState","LogInForm","SignUpForm","NavBar","DashBoard","responsiveFontSizes","App","props","userInfo","setUserInfo","id","name","username","quote","token","goals","handleSignUp","console","log","fetch","method","headers","body","JSON","stringify","password","then","res","json","handleResponse","resp","user","alert","history","push","handleLogin","renderDashBoard","routerProps"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport React, { Component } from 'react';\nimport 'bulma/css/bulma.min.css';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { useState } from 'react';\nimport LogInForm from './components/LogInForm'\nimport SignUpForm from './components/SignUpForm';\nimport NavBar from './components/NavBar';\nimport DashBoard from './components/DashBoard'\nimport { responsiveFontSizes } from '@material-ui/core';\n\nfunction App(props) {\n\n  const [userInfo, setUserInfo] = useState({\n    id: 0, \n    name: '',\n    username: '',\n    quote:'',\n    token: \"\", \n    goals: []\n  })\n\n  const handleSignUp = (userInfo) => {\n    console.log(\"Create account form has been submitted\")\n    console.log(userInfo)\n\n    fetch(\"http://localhost:3000/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: userInfo.name,\n        username: userInfo.username,\n        password: userInfo.password, \n        quote: userInfo.quote\n      })\n    })\n      .then(res => res.json())\n      .then(handleResponse)\n  }\n\n  const handleResponse = (resp) => {\n    console.log(resp)\n    if(resp.token){\n      setUserInfo({\n        id: resp.user.id,\n        username: resp.user.username,\n        name: resp.user.name,\n        quote: resp.user.quote,\n        token: resp.token\n      })\n      alert(\"Account created or logged in successfully!\")\n      props.history.push(\"/dashboard\")\n    } else {\n      alert(\"Request error\")\n    }\n  }\n\n  const handleLogin = (userInfo) => {\n    console.log(userInfo)\n\n    fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      headers :{\n        \"Content-type\": \"application/json\"\n      }, \n      body: JSON.stringify({\n        username: userInfo.username,\n        password: userInfo.password\n      })\n    })\n      .then(res => res.json())\n      .then(handleResponse)\n  }\n\n  const renderDashBoard = (routerProps) => {\n    return <DashBoard/>\n  }\n\n  return (\n    <div className=\"container\">\n      {/* Navigation bar */}\n\n      <Switch>\n        <Route exact path=\"/login\">\n          <div className=\"level-item has-text-centered\">\n            <LogInForm login={handleLogin}/>\n          </div>\n        </Route>\n\n        <Route exact path=\"/signup\">\n        <div className=\"level-item has-text-centered\">\n          <SignUpForm signUp={handleSignUp}></SignUpForm>\n          </div>\n        </Route>\n\n        <Route exact path=\"/dashboard\">\n        <div className=\"level-item has-text-centered\">\n          <DashBoard></DashBoard>\n          </div>\n        </Route>\n      </Switch>\n      </div>\n  );\n}\n\nexport default withRouter(App)\n"]},"metadata":{},"sourceType":"module"}