{"ast":null,"code":"var _jsxFileName = \"/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/NewGoalForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewGoalForm(props) {\n  _s();\n\n  const [goalInfo, setNewGoalInfo] = useState({\n    id: 0,\n    name: '',\n    start_date: '',\n    end_date: '',\n    category: ''\n  });\n\n  const handleChange = e => {\n    setNewGoalInfo({ ...goalInfo,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(\"http://localhost:3000/creategoal\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"authorization\": props.userInfo.token\n      },\n      body: JSON.stringify({\n        name: goalInfo.name,\n        start_date: goalInfo.start_date,\n        end_date: goalInfo.end_date,\n        category: goalInfo.category\n      })\n    }).then(res => res.json()).then(goal => {\n      if (goal.id) {\n        props.addGoal(goal);\n      }\n    });\n    console.log(goalInfo.name);\n  };\n\n  console.log(props.userInfo.categories.id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"category\",\n        children: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        type: \"category\",\n        id: \"category\",\n        name: \"category\",\n        value: goalInfo.category,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          selected: true,\n          hidden: true,\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), props.userInfo.categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: category.name\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 74\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        value: goalInfo.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"start_date\",\n        children: \"Start Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"start_date\",\n        name: \"start_date\",\n        value: goalInfo.start_date,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"end_date\",\n        children: \"End Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"end_date\",\n        name: \"end_date\",\n        value: goalInfo.end_date,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        value: \"Create\",\n        children: \"Create Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), \"Just to see if it's working \\\"\", goalInfo.category, \"\\\" is selected\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewGoalForm, \"vJRVzOSgB0nF/6SYiBctYtVMe9o=\");\n\n_c = NewGoalForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewGoalForm\");","map":{"version":3,"sources":["/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/NewGoalForm.js"],"names":["React","useState","NewGoalForm","props","goalInfo","setNewGoalInfo","id","name","start_date","end_date","category","handleChange","e","target","value","handleSubmit","preventDefault","fetch","method","headers","userInfo","token","body","JSON","stringify","then","res","json","goal","addGoal","console","log","categories","map","index"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\n\nexport default function NewGoalForm(props) {\n\n    const [goalInfo, setNewGoalInfo] = useState({\n        id: 0,\n        name: '', \n        start_date: '',\n        end_date: '', \n        category: ''\n    })\n\n    const handleChange = (e) => {\n        setNewGoalInfo({\n            ...goalInfo,\n            [e.target.name]: e.target.value\n        }) \n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        fetch(\"http://localhost:3000/creategoal\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n                \"authorization\": props.userInfo.token\n            },\n            body: JSON.stringify({\n                name: goalInfo.name,\n                start_date: goalInfo.start_date,\n                end_date: goalInfo.end_date,\n                category: goalInfo.category\n                })\n            })\n            .then(res => res.json())\n            .then((goal) => {\n                if(goal.id) {\n                    props.addGoal(goal)\n                }\n        })\n        console.log(goalInfo.name)\n    }\n\n    console.log(props.userInfo.categories.id)\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <label htmlFor=\"category\">Category</label>\n                <select type=\"category\" id=\"category\" name=\"category\" value={goalInfo.category} onChange={handleChange}>\n                    <option value=\"\" disabled selected hidden>Select</option>\n                    {props.userInfo.categories.map((category, index) => (<option key={category.id}>{category.name}</option>))}\n                </select>\n                <label htmlFor=\"name\">Name</label>\n                <input type=\"text\" id=\"name\" name=\"name\" value={goalInfo.name} onChange={handleChange}/>\n                <label htmlFor=\"start_date\">Start Date</label>\n                <input type=\"date\" id=\"start_date\" name=\"start_date\" value={goalInfo.start_date} onChange={handleChange}/>\n                <label htmlFor=\"end_date\">End Date</label>\n                <input type=\"date\" id=\"end_date\" name=\"end_date\" value={goalInfo.end_date} onChange={handleChange}/>\n                \n                <button type=\"submit\" value=\"Create\">Create Goal</button>\n            </form>\n            Just to see if it's working \"{goalInfo.category}\" is selected\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}