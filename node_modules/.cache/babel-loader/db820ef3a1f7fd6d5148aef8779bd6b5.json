{"ast":null,"code":"var _jsxFileName = \"/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/NewCategoryForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewCategoryForm(props) {\n  _s();\n\n  const [categoryInfo, setNewCategoryInfo] = useState({\n    name: '',\n    duration: ''\n  });\n\n  const handleChange = e => {\n    setNewCategoryInfo({ ...categoryInfo,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(\"http://localhost:3000/createcategory\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"authorization\": props.userInfo.token\n      },\n      body: JSON.stringify({\n        name: categoryInfo.name,\n        duration: categoryInfo.duration\n      })\n    }).then(res => res.json()).then(category => {\n      if (category.id) {\n        props.addCategory(category);\n      }\n\n      setNewCategoryInfo({\n        name: '',\n        duration: ''\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"field\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        value: categoryInfo.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Duration\",\n        children: \"Duration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        id: \"duration\",\n        name: \"duration\",\n        value: categoryInfo.duration,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-primary\",\n        type: \"submit\",\n        value: \"create\",\n        children: \"Create Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewCategoryForm, \"ZpNaZ43l8g4xlARAK6C3LfbBF+Q=\");\n\n_c = NewCategoryForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewCategoryForm\");","map":{"version":3,"sources":["/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/NewCategoryForm.js"],"names":["React","useState","NewCategoryForm","props","categoryInfo","setNewCategoryInfo","name","duration","handleChange","e","target","value","handleSubmit","preventDefault","fetch","method","headers","userInfo","token","body","JSON","stringify","then","res","json","category","id","addCategory"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAE3C,QAAM,CAACC,YAAD,EAAeC,kBAAf,IAAqCJ,QAAQ,CAAC;AAChDK,IAAAA,IAAI,EAAE,EAD0C;AAEhDC,IAAAA,QAAQ,EAAE;AAFsC,GAAD,CAAnD;;AAKA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxBJ,IAAAA,kBAAkB,CAAC,EACf,GAAGD,YADY;AAEf,OAACK,CAAC,CAACC,MAAF,CAASJ,IAAV,GAAiBG,CAAC,CAACC,MAAF,CAASC;AAFX,KAAD,CAAlB;AAIH,GALD;;AAOA,QAAMC,YAAY,GAAIH,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACI,cAAF;AAEAC,IAAAA,KAAK,CAAC,sCAAD,EAAyC;AAC1CC,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAiBb,KAAK,CAACc,QAAN,CAAeC;AAF3B,OAFiC;AAMtCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBf,QAAAA,IAAI,EAAEF,YAAY,CAACE,IADF;AAEjBC,QAAAA,QAAQ,EAAEH,YAAY,CAACG;AAFN,OAAf;AANgC,KAAzC,CAAL,CAWSe,IAXT,CAWcC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAXrB,EAYSF,IAZT,CAYeG,QAAD,IAAc;AAChB,UAAGA,QAAQ,CAACC,EAAZ,EAAgB;AACZvB,QAAAA,KAAK,CAACwB,WAAN,CAAkBF,QAAlB;AACH;;AACDpB,MAAAA,kBAAkB,CAAC;AACfC,QAAAA,IAAI,EAAE,EADS;AAEfC,QAAAA,QAAQ,EAAE;AAFK,OAAD,CAAlB;AAIH,KApBT;AAqBH,GAxBD;;AA0BA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACA;AAAM,MAAA,QAAQ,EAAEK,YAAhB;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAyB,QAAA,IAAI,EAAC,MAA9B;AAAqC,QAAA,EAAE,EAAC,MAAxC;AAA+C,QAAA,IAAI,EAAC,MAApD;AAA2D,QAAA,KAAK,EAAER,YAAY,CAACE,IAA/E;AAAqF,QAAA,QAAQ,EAAEE;AAA/F;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAyB,QAAA,IAAI,EAAC,MAA9B;AAAqC,QAAA,EAAE,EAAC,UAAxC;AAAmD,QAAA,IAAI,EAAC,UAAxD;AAAmE,QAAA,KAAK,EAAEJ,YAAY,CAACG,QAAvF;AAAiG,QAAA,QAAQ,EAAEC;AAA3G;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAsC,QAAA,IAAI,EAAC,QAA3C;AAAoD,QAAA,KAAK,EAAC,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GAtDuBN,e;;KAAAA,e","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\n\nexport default function NewCategoryForm(props) {\n\n    const [categoryInfo, setNewCategoryInfo] = useState({\n        name: '', \n        duration: ''\n    });\n\n    const handleChange = (e) => {\n        setNewCategoryInfo({\n            ...categoryInfo,\n            [e.target.name]: e.target.value\n        }) \n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        fetch(\"http://localhost:3000/createcategory\", {\n            method: \"POST\", \n            headers: {\n                \"content-type\": \"application/json\",\n                \"authorization\": props.userInfo.token\n                }, \n                body: JSON.stringify({\n                    name: categoryInfo.name,\n                    duration: categoryInfo.duration\n                })\n            })\n                .then(res => res.json())\n                .then((category) => {\n                    if(category.id) {\n                        props.addCategory(category)\n                    }\n                    setNewCategoryInfo({\n                        name: '', \n                        duration: ''\n                    })\n                })\n    }\n\n    return (\n        <div className=\"field\">\n        <form onSubmit={handleSubmit}>\n            <label htmlFor=\"name\">Name</label>\n            <input className=\"input\" type=\"text\" id=\"name\" name=\"name\" value={categoryInfo.name} onChange={handleChange}/>\n            <br></br>\n            <label htmlFor=\"Duration\">Duration</label>\n            <input className=\"input\" type=\"text\" id=\"duration\" name=\"duration\" value={categoryInfo.duration} onChange={handleChange}/>\n            <br></br>\n            <br></br>\n            <button className=\"button is-primary\" type=\"submit\" value=\"create\">Create Category</button>\n        </form>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}