{"ast":null,"code":"var _jsxFileName = \"/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/NewTaskForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewTaskForm(props) {\n  _s();\n\n  const [taskInfo, setNewTaskInfo] = useState({\n    name: '',\n    description: '',\n    priority: '',\n    difficulty: '',\n    start_date: '',\n    end_date: '',\n    duration: '',\n    category: '0',\n    goal: '',\n    status_complete: false,\n    taskable_type: \"Category\"\n  });\n  const [goals, setGoals] = useState([]);\n  useEffect(() => {\n    const foundCategory = props.categories.find(category => category.id === parseInt(taskInfo.category));\n    let potentialGoals = foundCategory ? foundCategory.goals : [];\n    setGoals(potentialGoals);\n  }, [taskInfo.category]);\n\n  const handleChange = e => {\n    setNewTaskInfo({ ...taskInfo,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  console.log(categoryInfo);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(taskInfo);\n    fetch(\"http://localhost:3000/createtask\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"authorization\": props.userInfo.token\n      },\n      body: JSON.stringify({\n        name: taskInfo.name,\n        description: taskInfo.description,\n        priority: taskInfo.priority,\n        difficulty: taskInfo.difficulty,\n        start_date: taskInfo.start_date,\n        end_date: taskInfo.end_date,\n        duration: taskInfo.duration,\n        category_id: taskInfo.category,\n        goal_id: taskInfo.goal,\n        status_complete: false\n      })\n    }).then(res => res.json()).then(task => {\n      if (task.id) {\n        props.addTask(task);\n      }\n\n      setNewTaskInfo({\n        name: '',\n        description: '',\n        priority: '',\n        difficulty: '',\n        start_date: '',\n        end_date: '',\n        duration: '',\n        category: '0',\n        goal: '',\n        status_complete: false\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: taskInfo.name,\n        id: \"text\",\n        type: \"text\",\n        name: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: taskInfo.description,\n        id: \"text\",\n        type: \"text\",\n        name: \"description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"priority\",\n        children: \"Priority\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleChange,\n        value: taskInfo.priority,\n        type: \"category\",\n        name: \"priority\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          selected: true,\n          hidden: true,\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Must\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Should\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Want\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"difficulty\",\n        children: \"Difficulty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleChange,\n        value: taskInfo.difficulty,\n        type: \"category\",\n        name: \"difficulty\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          selected: true,\n          hidden: true,\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Worst\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Not Bad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Easy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"start_date\",\n        children: \"Start Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: taskInfo.start_date,\n        type: \"date\",\n        name: \"start_date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"end_date\",\n        children: \"End Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: taskInfo.end_date,\n        type: \"date\",\n        name: \"end_date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"duration\",\n        children: \"Duration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: taskInfo.duration,\n        id: \"text\",\n        type: \"text\",\n        name: \"duration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        checked: taskInfo.taskable_type === \"Category\",\n        name: \"taskable_type\",\n        value: \"Category\",\n        id: \"Category\",\n        type: \"radio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Category\",\n        children: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        checked: taskInfo.taskable_type === \"Goal\",\n        name: \"taskable_type\",\n        value: \"Goal\",\n        id: \"Goal\",\n        type: \"radio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Goal\",\n        children: \"Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"category\",\n        children: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleChange,\n        value: taskInfo.category,\n        type: \"text\",\n        name: \"category\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          selected: true,\n          hidden: true,\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this), props.categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.id,\n          children: category.name\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"goal\",\n        children: \"Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleChange,\n        value: taskInfo.goal,\n        type: \"text\",\n        name: \"goal\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          selected: true,\n          hidden: true,\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this), goals.map((goals, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: goals.id,\n          children: goals.name\n        }, goals.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"status_complete\",\n        children: \"Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: taskInfo.status_complete,\n        type: \"checkbox\",\n        name: \"status_complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        value: \"submit\",\n        type: \"submit\",\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewTaskForm, \"6ZJQQBO5wjc0SOh4cCiW4qEJRWs=\");\n\n_c = NewTaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTaskForm\");","map":{"version":3,"sources":["/Users/paul/Development/code/Mod5/phase-5-project/frontend/src/components/NewTaskForm.js"],"names":["React","useState","useEffect","NewTaskForm","props","taskInfo","setNewTaskInfo","name","description","priority","difficulty","start_date","end_date","duration","category","goal","status_complete","taskable_type","goals","setGoals","foundCategory","categories","find","id","parseInt","potentialGoals","handleChange","e","target","value","console","log","categoryInfo","handleSubmit","preventDefault","fetch","method","headers","userInfo","token","body","JSON","stringify","category_id","goal_id","then","res","json","task","addTask","map","index"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react'\n\nexport default function NewTaskForm(props) {\n\n    const [taskInfo, setNewTaskInfo] = useState({\n        name: '', \n        description: '', \n        priority: '', \n        difficulty: '', \n        start_date: '', \n        end_date: '',\n        duration: '',\n        category: '0',\n        goal: '',\n        status_complete: false,\n        taskable_type: \"Category\"\n    })\n    const [goals, setGoals] = useState([])\n\n    useEffect(() => {\n        const foundCategory = props.categories.find((category) => (\n            category.id === parseInt(taskInfo.category)))\n        let potentialGoals = foundCategory ? foundCategory.goals : []\n        setGoals(potentialGoals)\n    }, [taskInfo.category])\n\n\n    const handleChange = (e) => {\n        setNewTaskInfo({\n            ...taskInfo,\n            [e.target.name]: e.target.value\n        }) \n    }\n\n    console.log(categoryInfo)\n\n    const handleSubmit = (e) => { \n        e.preventDefault()\n        console.log(taskInfo)\n        fetch(\"http://localhost:3000/createtask\", {\n            method: \"POST\", \n            headers: {\n                \"content-type\": \"application/json\",\n                \"authorization\": props.userInfo.token\n                }, \n                body: JSON.stringify({\n                    name: taskInfo.name, \n                    description: taskInfo.description, \n                    priority: taskInfo.priority, \n                    difficulty: taskInfo.difficulty, \n                    start_date: taskInfo.start_date, \n                    end_date: taskInfo.end_date,\n                    duration: taskInfo.duration,\n                    category_id: taskInfo.category,\n                    goal_id: taskInfo.goal,\n                    status_complete: false\n                })\n            })\n                .then(res => res.json())\n                .then((task) => {\n                    if(task.id) {\n                        props.addTask(task)\n                    }\n                    setNewTaskInfo({\n                        name: '', \n                        description: '', \n                        priority: '', \n                        difficulty: '', \n                        start_date: '', \n                        end_date: '',\n                        duration: '',\n                        category: '0',\n                        goal: '',\n                        status_complete: false\n                    })\n\n                })\n    }\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <label htmlFor=\"name\">Name</label>\n                    <input onChange={handleChange} value={taskInfo.name} id=\"text\" type=\"text\" name=\"name\"/>\n                <label htmlFor=\"description\">Description</label>\n                    <input onChange={handleChange} value={taskInfo.description} id=\"text\" type=\"text\" name=\"description\"/>\n                <label htmlFor=\"priority\">Priority</label>\n                    <select onChange={handleChange} value={taskInfo.priority} type=\"category\" name=\"priority\">\n                        <option value=\"\" disabled selected hidden>Select</option>\n                        <option>Must</option>\n                        <option>Should</option>\n                        <option>Want</option>\n                    </select>\n                <label htmlFor=\"difficulty\">Difficulty</label>\n                    <select onChange={handleChange} value={taskInfo.difficulty} \n                    type=\"category\" name=\"difficulty\">\n                        <option value=\"\" disabled selected hidden>Select</option>\n                        <option>Worst</option>\n                        <option>Not Bad</option>\n                        <option>Easy</option>\n                    </select>\n                <label htmlFor=\"start_date\">Start Date</label>\n                    <input onChange={handleChange} value={taskInfo.start_date} type=\"date\" name=\"start_date\"/>\n                <label htmlFor=\"end_date\">End Date</label>\n                    <input onChange={handleChange} value={taskInfo.end_date} type=\"date\" name=\"end_date\"/>\n                <label htmlFor=\"duration\">Duration</label>\n                    <input onChange={handleChange} value={taskInfo.duration} id=\"text\" type=\"text\" name=\"duration\"/>\n                \n                <input onChange={handleChange} checked={taskInfo.taskable_type === \"Category\"} name='taskable_type' value=\"Category\" id=\"Category\" type='radio'/>\n\n                <label htmlFor=\"Category\">\n                    Category\n                </label>    \n\n                <input onChange={handleChange} checked={taskInfo.taskable_type === \"Goal\"} name='taskable_type' value=\"Goal\" id=\"Goal\" type='radio'/>\n\n                <label htmlFor=\"Goal\">\n                    Goal\n                </label>   \n\n\n\n\n\n                <label htmlFor=\"category\">Category</label>\n                    <select onChange={handleChange} value={taskInfo.category} type=\"text\"name=\"category\">\n                        <option value=\"\" disabled selected hidden>Select</option>\n                        {props.categories.map((category, index) => (\n                            <option key={category.id} value={category.id}>{category.name}</option>\n                        ))}\n                    </select>\n\n\n\n                <label htmlFor=\"goal\">Goal</label>\n                    <select onChange={handleChange} value={taskInfo.goal} type=\"text\"name=\"goal\">\n                        <option value=\"\" disabled selected hidden>Select</option>\n                        {goals.map((goals, index) => (\n                            <option key={goals.id} value={goals.id}>{goals.name}</option>\n                        ))}\n     \n\n                    </select>\n                <label htmlFor=\"status_complete\">Complete</label>\n                    <input onChange={handleChange} value={taskInfo.status_complete} type=\"checkbox\" name=\"status_complete\"/>\n                <button value=\"submit\" type=\"submit\">Create Task</button>\n            </form>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}